definitions:
  Model.Cashier:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      passcode:
        type: string
      updated_at:
        type: string
    type: object
  Model.Category:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  Model.Discount:
    properties:
      created_at:
        type: string
      expired_at:
        type: integer
      expired_at_format:
        type: string
      id:
        type: integer
      qty:
        type: integer
      result:
        type: integer
      string_format:
        type: string
      type:
        type: string
      updated_at:
        type: string
    type: object
  Model.Order:
    properties:
      Id:
        type: integer
      cashier_id:
        type: integer
      created_at:
        type: string
      is_download:
        type: integer
      payment_types_id:
        type: integer
      product_id:
        type: string
      quantities:
        type: string
      receipt_id:
        type: string
      total_paid:
        type: integer
      total_price:
        type: integer
      total_return:
        type: integer
      updated_at:
        type: string
    type: object
  Model.Payment:
    properties:
      created_at:
        type: string
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
      payment_type_id:
        type: integer
      type:
        type: string
      updated_at:
        type: string
    type: object
  Model.PaymentType:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  Model.Product:
    properties:
      categoryId:
        type: integer
      created_at:
        type: string
      discountId:
        type: integer
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: integer
      sku:
        type: string
      stock:
        type: integer
      total_final_price:
        type: integer
      total_normal_price:
        type: integer
      updated_at:
        type: string
    type: object
  Model.ProductResponseOrder:
    properties:
      discount:
        $ref: '#/definitions/Model.Discount'
      name:
        type: string
      price:
        type: integer
      productId:
        type: integer
      qty:
        type: integer
      total_final_price:
        type: integer
      total_normal_price:
        type: integer
    type: object
  Model.ProductResult:
    properties:
      category:
        $ref: '#/definitions/Model.Category'
      discount:
        $ref: '#/definitions/Model.Discount'
      image:
        type: string
      name:
        type: string
      price:
        type: integer
      productId:
        type: integer
      sku:
        type: string
      stock:
        type: integer
    type: object
  Model.RevenueResponse:
    properties:
      logo:
        type: string
      name:
        type: string
      payment_type_id:
        type: integer
      total_amount:
        type: integer
    type: object
  Model.SoldResponse:
    properties:
      name:
        type: string
      product_id:
        type: integer
      total_amount:
        type: integer
      total_qty:
        type: integer
    type: object
  Response.WebResponse-Model_Category:
    properties:
      data:
        $ref: '#/definitions/Model.Category'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-Model_Payment:
    properties:
      data:
        $ref: '#/definitions/Model.Payment'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-Model_Product:
    properties:
      data:
        $ref: '#/definitions/Model.Product'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-Model_ProductResult:
    properties:
      data:
        $ref: '#/definitions/Model.ProductResult'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-array_Model_Cashier:
    properties:
      data:
        items:
          $ref: '#/definitions/Model.Cashier'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_CashierDetails:
    properties:
      data:
        $ref: '#/definitions/dto.CashierDetails'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_CategoryList:
    properties:
      data:
        $ref: '#/definitions/dto.CategoryList'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_CheckOrder:
    properties:
      data:
        $ref: '#/definitions/dto.CheckOrder'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_ListPayment:
    properties:
      data:
        $ref: '#/definitions/dto.ListPayment'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_OrderDetailResponse:
    properties:
      data:
        $ref: '#/definitions/dto.OrderDetailResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_OrderListResponse:
    properties:
      data:
        $ref: '#/definitions/dto.OrderListResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_OrderResponse:
    properties:
      data:
        $ref: '#/definitions/dto.OrderResponse'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_Passcode:
    properties:
      data:
        $ref: '#/definitions/dto.Passcode'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_ProductList:
    properties:
      data:
        $ref: '#/definitions/dto.ProductList'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_Revenue:
    properties:
      data:
        $ref: '#/definitions/dto.Revenue'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_Sold:
    properties:
      data:
        $ref: '#/definitions/dto.Sold'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-dto_Token:
    properties:
      data:
        $ref: '#/definitions/dto.Token'
      message:
        type: string
      success:
        type: boolean
    type: object
  Response.WebResponse-string:
    properties:
      data:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  dto.CashierDetails:
    properties:
      cashier_id:
        type: integer
      created_at:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  dto.Category:
    properties:
      categoryId:
        type: integer
      name:
        type: string
    type: object
  dto.CategoryList:
    properties:
      categories:
        items:
          $ref: '#/definitions/dto.Category'
        type: array
      page:
        $ref: '#/definitions/dto.Pagination'
    type: object
  dto.CheckOrder:
    properties:
      is_downloaded:
        type: boolean
    type: object
  dto.CreatePayment:
    properties:
      logo:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  dto.Discount:
    properties:
      expiredAt:
        type: integer
      qty:
        type: integer
      result:
        type: integer
      type:
        type: string
    type: object
  dto.ListPayment:
    properties:
      meta:
        $ref: '#/definitions/dto.Pagination'
      payment:
        items:
          $ref: '#/definitions/dto.Payment'
        type: array
    type: object
  dto.LoginDto:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  dto.OrderDetail:
    properties:
      cashier:
        $ref: '#/definitions/Model.Cashier'
      cashier_id:
        type: integer
      created_at:
        type: string
      order_id:
        type: integer
      payment_type:
        $ref: '#/definitions/Model.PaymentType'
      payment_types_id:
        type: integer
      receipt_id:
        type: string
      total_paid:
        type: integer
      total_price:
        type: integer
      total_return:
        type: integer
    type: object
  dto.OrderDetailResponse:
    properties:
      orders:
        $ref: '#/definitions/dto.OrderDetail'
      products:
        items:
          $ref: '#/definitions/Model.Product'
        type: array
    type: object
  dto.OrderList:
    properties:
      cashier:
        $ref: '#/definitions/Model.Cashier'
      cashiersId:
        type: integer
      createdAt:
        type: string
      orderId:
        type: integer
      payment_type:
        $ref: '#/definitions/Model.PaymentType'
      paymentTypesId:
        type: integer
      receiptId:
        type: string
      totalPaid:
        type: integer
      totalPrice:
        type: integer
      totalReturn:
        type: integer
    type: object
  dto.OrderListResponse:
    properties:
      meta:
        $ref: '#/definitions/dto.Pagination'
      order:
        items:
          $ref: '#/definitions/dto.OrderList'
        type: array
    type: object
  dto.OrderResponse:
    properties:
      order:
        $ref: '#/definitions/Model.Order'
      products:
        items:
          $ref: '#/definitions/Model.ProductResponseOrder'
        type: array
    type: object
  dto.Pagination:
    properties:
      limit:
        type: integer
      skip:
        type: integer
      total:
        type: integer
    type: object
  dto.Passcode:
    properties:
      passcode:
        type: string
    type: object
  dto.Payment:
    properties:
      logo:
        type: string
      name:
        type: string
      payment_type_id:
        type: integer
      paymentId:
        type: integer
      type:
        type: string
    type: object
  dto.ProdDiscount:
    properties:
      categoryId:
        type: integer
      discount:
        $ref: '#/definitions/dto.Discount'
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: integer
      sku:
        type: string
      stock:
        type: integer
    type: object
  dto.ProductList:
    properties:
      meta:
        $ref: '#/definitions/dto.Pagination'
      product_res:
        items:
          $ref: '#/definitions/Model.ProductResult'
        type: array
    type: object
  dto.Revenue:
    properties:
      paymentTypes:
        items:
          $ref: '#/definitions/Model.RevenueResponse'
        type: array
      total_revenue:
        type: integer
    type: object
  dto.Sold:
    properties:
      total_sold:
        items:
          $ref: '#/definitions/Model.SoldResponse'
        type: array
    type: object
  dto.Token:
    properties:
      token:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is the complete api documentation for sales api
  title: Sales api docs
  version: "1.0"
paths:
  /cashier/{cashierId}/logout:
    post:
      description: logout Cashier
      parameters:
      - description: cashier Id
        in: path
        name: cashierId
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.Passcode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-string'
      summary: logout cashier
      tags:
      - authentication
  /cashier/{cashierId}/passcode:
    post:
      description: passcode Cashier
      parameters:
      - description: cashier Id
        in: path
        name: cashierId
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.Passcode'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_Passcode'
      summary: passcode cashier
      tags:
      - authentication
  /cashier/login:
    post:
      description: login Cashier
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_Token'
      summary: login cashier
      tags:
      - authentication
  /cashiers:
    get:
      description: get cashier list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-array_Model_Cashier'
      summary: get cashier list
      tags:
      - cashiers
    post:
      description: create cashier
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Model.Cashier'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Response.WebResponse-string'
      summary: create cashier
      tags:
      - cashiers
  /cashiers/{cashierId}:
    delete:
      description: delete cashier
      parameters:
      - description: cashier id
        in: path
        name: cashierId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-string'
      summary: delete cashier
      tags:
      - cashiers
    get:
      description: get cashier detail
      parameters:
      - description: cashier id
        in: path
        name: cashierId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_CashierDetails'
      summary: get cashier detail
      tags:
      - cashiers
    put:
      description: update cashier
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Model.Cashier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-string'
      summary: get update cashier
      tags:
      - cashiers
  /categories:
    get:
      description: get category list
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: skip
        in: query
        name: skip
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_CategoryList'
      summary: get category list
      tags:
      - category
    post:
      description: create category
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Model.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Category'
      summary: create category
      tags:
      - category
  /categories/{categoryId}:
    delete:
      description: delete category
      parameters:
      - description: category id
        in: path
        name: categoryId
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-string'
      summary: get delete category
      tags:
      - category
    get:
      description: get category details
      parameters:
      - description: category id
        in: path
        name: categoryId
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Category'
      summary: get category details
      tags:
      - category
    put:
      description: update category
      parameters:
      - description: category id
        in: path
        name: categoryId
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Model.Category'
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Category'
      summary: get update category
      tags:
      - category
  /orders:
    get:
      description: order list
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_OrderListResponse'
      summary: order list
      tags:
      - Order
    post:
      description: create order
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_OrderResponse'
      summary: create order
      tags:
      - Order
  /orders/{orderId}:
    get:
      description: order detail
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: order id
        in: path
        name: orderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_OrderDetailResponse'
      summary: order detail
      tags:
      - Order
  /orders/{orderId}/check-download:
    get:
      description: checkout order
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: order id
        in: path
        name: orderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_CheckOrder'
      summary: checkout order
      tags:
      - Order
  /orders/{orderId}/download:
    get:
      description: order list
      parameters:
      - description: order id
        in: path
        name: orderId
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_OrderListResponse'
      summary: order list
      tags:
      - Order
  /orders/subtotal:
    post:
      description: subtotal orders
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_OrderResponse'
      summary: subtotal orders
      tags:
      - Order
  /payments:
    get:
      description: list payment
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: skip
        in: query
        name: skip
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_ListPayment'
      summary: list payment
      tags:
      - Payment
    post:
      description: create payment
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePayment'
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Payment'
      summary: create payment
      tags:
      - Payment
  /payments/{paymentId}:
    delete:
      description: payment details
      parameters:
      - description: payment id
        in: path
        name: paymentId
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-string'
      summary: payment details
      tags:
      - Payment
    get:
      description: payment details
      parameters:
      - description: payment id
        in: path
        name: paymentId
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Payment'
      summary: payment details
      tags:
      - Payment
    put:
      description: payment details
      parameters:
      - description: payment id
        in: path
        name: paymentId
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Model.Payment'
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Payment'
      summary: payment details
      tags:
      - Payment
  /products:
    get:
      description: product list
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: skip
        in: query
        name: skip
        required: true
        type: string
      - description: categoryId
        in: query
        name: categoryId
        required: true
        type: string
      - description: q
        in: query
        name: q
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_ProductList'
      summary: product list
      tags:
      - Product
    post:
      description: create product
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ProdDiscount'
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Product'
      summary: create product
      tags:
      - Product
  /products/{productId}:
    delete:
      description: delete product
      parameters:
      - description: product id
        in: path
        name: productId
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-string'
      summary: delete product
      tags:
      - Product
    get:
      description: get product details
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        type: string
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_ProductResult'
      summary: get product details
      tags:
      - Product
    put:
      description: update products
      parameters:
      - description: productId
        in: path
        name: productId
        required: true
        type: string
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/Model.Product'
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-Model_Product'
      summary: update products
      tags:
      - Product
  /revenues:
    get:
      description: get revenues
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_Revenue'
      summary: get revenues
      tags:
      - report
  /solds:
    get:
      description: get solds
      parameters:
      - description: authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response.WebResponse-dto_Sold'
      summary: get solds
      tags:
      - report
swagger: "2.0"
